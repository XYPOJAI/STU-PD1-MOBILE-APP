{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Index from \"./screens/Index\";\nimport Details from \"./screens/Details\";\nimport Create from \"./screens/Create\";\nimport Edit from \"./screens/Edit\";\nimport Delete from \"./screens/Delete\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var PreferencesContext = React.createContext({\n  toggleTheme: function toggleTheme() {},\n  isThemeDark: false\n});\nvar CombinedDefaultTheme = PaperProvider.merge(PaperDefaultTheme, NavigationDefaultTheme);\nvar CombinedDarkTheme = merge(PaperDarkTheme, NavigationDarkTheme);\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isThemeDark = _React$useState2[0],\n      setIsThemeDark = _React$useState2[1];\n\n  var theme = isThemeDark ? CombinedDarkTheme : CombinedDefaultTheme;\n  var toggleTheme = React.useCallback(function () {\n    return setIsThemeDark(!isThemeDark);\n  }, [isThemeDark]);\n  var preferences = React.useMemo(function () {\n    return {\n      toggleTheme: toggleTheme,\n      isThemeDark: isThemeDark\n    };\n  }, [toggleTheme, isThemeDark]);\n  return _jsx(PreferencesContext.Provider, {\n    value: preferences,\n    children: _jsx(PaperProvider, {\n      theme: theme,\n      children: _jsx(NavigationContainer, {\n        theme: theme,\n        children: _jsxs(Stack.Navigator, {\n          initialRouteName: \"Index\",\n          children: [_jsx(Stack.Screen, {\n            name: \"Index\",\n            component: Index,\n            options: {\n              title: \"MY CONTACTS\"\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"Details\",\n            component: Details,\n            options: {\n              title: \"CONTACT DETAILS\"\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"Create\",\n            component: Create,\n            options: {\n              title: \"ADD CONTACT\"\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"Edit\",\n            component: Edit,\n            options: {\n              title: \"UPDATE CONTACT\"\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"Delete\",\n            component: Delete,\n            options: {\n              title: \"DELETE CONTACT\"\n            }\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","Index","Details","Create","Edit","Delete","Provider","PaperProvider","React","PreferencesContext","createContext","toggleTheme","isThemeDark","CombinedDefaultTheme","merge","PaperDefaultTheme","NavigationDefaultTheme","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","Stack","App","useState","setIsThemeDark","theme","useCallback","preferences","useMemo","title"],"sources":["/Users/home/Desktop/APP/ui/App.js"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Index from \"./screens/Index\";\nimport Details from \"./screens/Details\";\nimport Create from \"./screens/Create\";\nimport Edit from \"./screens/Edit\";\nimport Delete from \"./screens/Delete\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\n\nimport React from 'react';\n//import { PreferencesContext } from './PreferencesContext';\n\nexport const PreferencesContext = React.createContext({\n  toggleTheme: () => {},\n  isThemeDark: false,\n});\n\nconst CombinedDefaultTheme = PaperProvider.merge(PaperDefaultTheme, NavigationDefaultTheme);\nconst CombinedDarkTheme = merge(PaperDarkTheme, NavigationDarkTheme);\n\nconst Stack = createNativeStackNavigator();\n  export default function App() {\n    const [isThemeDark, setIsThemeDark] = React.useState(false);\n\n    let theme = isThemeDark ? CombinedDarkTheme : CombinedDefaultTheme;\n  \n    const toggleTheme = React.useCallback(() => {\n      return setIsThemeDark(!isThemeDark);\n    }, [isThemeDark]);\n  \n    const preferences = React.useMemo(\n      () => ({\n        toggleTheme,\n        isThemeDark,\n      }),\n      [toggleTheme, isThemeDark]\n    );\n  \n  return (\n    <PreferencesContext.Provider value={preferences}>\n      <PaperProvider theme={theme}>\n        <NavigationContainer theme={theme}>\n        <Stack.Navigator initialRouteName=\"Index\">\n          <Stack.Screen\n            name=\"Index\"\n            component={Index}\n            options={{ title: \"MY CONTACTS\" }}\n          />\n          <Stack.Screen\n            name=\"Details\"\n            component={Details}\n            options={{ title: \"CONTACT DETAILS\" }}\n          />\n          <Stack.Screen\n            name=\"Create\"\n            component={Create}\n            options={{ title: \"ADD CONTACT\" }}\n          />\n          <Stack.Screen\n            name=\"Edit\"\n            component={Edit}\n            options={{ title: \"UPDATE CONTACT\" }}\n          />\n          <Stack.Screen\n            name=\"Delete\"\n            component={Delete}\n            options={{ title: \"DELETE CONTACT\" }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </PaperProvider>\n    </PreferencesContext.Provider>\n  );\n}\n"],"mappings":";AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,SAASC,QAAQ,IAAIC,aAArB,QAA0C,oBAA1C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,OAAO,IAAMC,kBAAkB,GAAGD,KAAK,CAACE,aAAN,CAAoB;EACpDC,WAAW,EAAE,uBAAM,CAAE,CAD+B;EAEpDC,WAAW,EAAE;AAFuC,CAApB,CAA3B;AAKP,IAAMC,oBAAoB,GAAGN,aAAa,CAACO,KAAd,CAAoBC,iBAApB,EAAuCC,sBAAvC,CAA7B;AACA,IAAMC,iBAAiB,GAAGH,KAAK,CAACI,cAAD,EAAiBC,mBAAjB,CAA/B;AAEA,IAAMC,KAAK,GAAGpB,0BAA0B,EAAxC;AACE,eAAe,SAASqB,GAAT,GAAe;EAC5B,sBAAsCb,KAAK,CAACc,QAAN,CAAe,KAAf,CAAtC;EAAA;EAAA,IAAOV,WAAP;EAAA,IAAoBW,cAApB;;EAEA,IAAIC,KAAK,GAAGZ,WAAW,GAAGK,iBAAH,GAAuBJ,oBAA9C;EAEA,IAAMF,WAAW,GAAGH,KAAK,CAACiB,WAAN,CAAkB,YAAM;IAC1C,OAAOF,cAAc,CAAC,CAACX,WAAF,CAArB;EACD,CAFmB,EAEjB,CAACA,WAAD,CAFiB,CAApB;EAIA,IAAMc,WAAW,GAAGlB,KAAK,CAACmB,OAAN,CAClB;IAAA,OAAO;MACLhB,WAAW,EAAXA,WADK;MAELC,WAAW,EAAXA;IAFK,CAAP;EAAA,CADkB,EAKlB,CAACD,WAAD,EAAcC,WAAd,CALkB,CAApB;EAQF,OACE,KAAC,kBAAD,CAAoB,QAApB;IAA6B,KAAK,EAAEc,WAApC;IAAA,UACE,KAAC,aAAD;MAAe,KAAK,EAAEF,KAAtB;MAAA,UACE,KAAC,mBAAD;QAAqB,KAAK,EAAEA,KAA5B;QAAA,UACA,MAAC,KAAD,CAAO,SAAP;UAAiB,gBAAgB,EAAC,OAAlC;UAAA,WACE,KAAC,KAAD,CAAO,MAAP;YACE,IAAI,EAAC,OADP;YAEE,SAAS,EAAEvB,KAFb;YAGE,OAAO,EAAE;cAAE2B,KAAK,EAAE;YAAT;UAHX,EADF,EAME,KAAC,KAAD,CAAO,MAAP;YACE,IAAI,EAAC,SADP;YAEE,SAAS,EAAE1B,OAFb;YAGE,OAAO,EAAE;cAAE0B,KAAK,EAAE;YAAT;UAHX,EANF,EAWE,KAAC,KAAD,CAAO,MAAP;YACE,IAAI,EAAC,QADP;YAEE,SAAS,EAAEzB,MAFb;YAGE,OAAO,EAAE;cAAEyB,KAAK,EAAE;YAAT;UAHX,EAXF,EAgBE,KAAC,KAAD,CAAO,MAAP;YACE,IAAI,EAAC,MADP;YAEE,SAAS,EAAExB,IAFb;YAGE,OAAO,EAAE;cAAEwB,KAAK,EAAE;YAAT;UAHX,EAhBF,EAqBE,KAAC,KAAD,CAAO,MAAP;YACE,IAAI,EAAC,QADP;YAEE,SAAS,EAAEvB,MAFb;YAGE,OAAO,EAAE;cAAEuB,KAAK,EAAE;YAAT;UAHX,EArBF;QAAA;MADA;IADF;EADF,EADF;AAmCD"},"metadata":{},"sourceType":"module"}