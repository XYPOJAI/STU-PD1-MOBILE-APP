{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Index from \"./screens/Index\";\nimport Details from \"./screens/Details\";\nimport Create from \"./screens/Create\";\nimport Edit from \"./screens/Edit\";\nimport Delete from \"./screens/Delete\";\nimport { DefaultTheme, Provider as PaperProvider } from \"react-native-paper\";\nimport React from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var PreferencesContext = React.createContext({\n  toggleTheme: function toggleTheme() {},\n  isThemeDark: false\n});\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isThemeDark = _React$useState2[0],\n      setIsThemeDark = _React$useState2[1];\n\n  var theme = isThemeDark ? CombinedDarkTheme : CombinedDefaultTheme;\n  var toggleTheme = React.useCallback(function () {\n    return setIsThemeDark(!isThemeDark);\n  }, [isThemeDark]);\n  var preferences = React.useMemo(function () {\n    return {\n      toggleTheme: toggleTheme,\n      isThemeDark: isThemeDark\n    };\n  }, [toggleTheme, isThemeDark]);\n  return _jsx(PaperProvider, {\n    theme: theme,\n    children: _jsx(NavigationContainer, {\n      theme: theme,\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: \"Index\",\n        children: [_jsx(Stack.Screen, {\n          name: \"Index\",\n          component: Index,\n          options: {\n            title: \"MY CONTACTS\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Details\",\n          component: Details,\n          options: {\n            title: \"CONTACT DETAILS\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Create\",\n          component: Create,\n          options: {\n            title: \"ADD CONTACT\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Edit\",\n          component: Edit,\n          options: {\n            title: \"UPDATE CONTACT\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Delete\",\n          component: Delete,\n          options: {\n            title: \"DELETE CONTACT\"\n          }\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","Index","Details","Create","Edit","Delete","DefaultTheme","Provider","PaperProvider","React","PreferencesContext","createContext","toggleTheme","isThemeDark","Stack","App","useState","setIsThemeDark","theme","CombinedDarkTheme","CombinedDefaultTheme","useCallback","preferences","useMemo","title"],"sources":["/Users/home/Desktop/APP/ui/App.js"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Index from \"./screens/Index\";\nimport Details from \"./screens/Details\";\nimport Create from \"./screens/Create\";\nimport Edit from \"./screens/Edit\";\nimport Delete from \"./screens/Delete\";\nimport { DefaultTheme,\n  Provider as PaperProvider,\n  // PaperDefaultTheme,\n  // NavigationDefaultTheme,\n} from \"react-native-paper\";\n\nimport React from \"react\";\n//import { PreferencesContext } from './PreferencesContext';\n\nexport const PreferencesContext = React.createContext({\n  toggleTheme: () => {},\n  isThemeDark: false,\n});\n\n// const CombinedDefaultTheme = merge(\n//   PaperDefaultTheme,\n//   NavigationDefaultTheme\n// );\n// const CombinedDarkTheme = merge(\n//   PaperDarkTheme,\n//   NavigationDarkTheme\n// );\n// const CombinedDefaultTheme = \n\nconst Stack = createNativeStackNavigator();\nexport default function App() {\n  const [isThemeDark, setIsThemeDark] = React.useState(false);\n\n  let theme = isThemeDark ? CombinedDarkTheme : CombinedDefaultTheme;\n\n  const toggleTheme = React.useCallback(() => {\n    return setIsThemeDark(!isThemeDark);\n  }, [isThemeDark]);\n\n  const preferences = React.useMemo(\n    () => ({\n      toggleTheme,\n      isThemeDark,\n    }),\n    [toggleTheme, isThemeDark]\n  );\n\n  return (\n    // <PreferencesContext.Provider value={preferences}>\n      <PaperProvider theme={theme}>\n        <NavigationContainer theme={theme}>\n          <Stack.Navigator initialRouteName=\"Index\">\n            <Stack.Screen\n              name=\"Index\"\n              component={Index}\n              options={{ title: \"MY CONTACTS\" }}\n            />\n            <Stack.Screen\n              name=\"Details\"\n              component={Details}\n              options={{ title: \"CONTACT DETAILS\" }}\n            />\n            <Stack.Screen\n              name=\"Create\"\n              component={Create}\n              options={{ title: \"ADD CONTACT\" }}\n            />\n            <Stack.Screen\n              name=\"Edit\"\n              component={Edit}\n              options={{ title: \"UPDATE CONTACT\" }}\n            />\n            <Stack.Screen\n              name=\"Delete\"\n              component={Delete}\n              options={{ title: \"DELETE CONTACT\" }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </PaperProvider>\n    // </PreferencesContext.Provider>\n  );\n}\n"],"mappings":";AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,SAASC,YAAT,EACEC,QAAQ,IAAIC,aADd,QAIO,oBAJP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,OAAO,IAAMC,kBAAkB,GAAGD,KAAK,CAACE,aAAN,CAAoB;EACpDC,WAAW,EAAE,uBAAM,CAAE,CAD+B;EAEpDC,WAAW,EAAE;AAFuC,CAApB,CAA3B;AAeP,IAAMC,KAAK,GAAGd,0BAA0B,EAAxC;AACA,eAAe,SAASe,GAAT,GAAe;EAC5B,sBAAsCN,KAAK,CAACO,QAAN,CAAe,KAAf,CAAtC;EAAA;EAAA,IAAOH,WAAP;EAAA,IAAoBI,cAApB;;EAEA,IAAIC,KAAK,GAAGL,WAAW,GAAGM,iBAAH,GAAuBC,oBAA9C;EAEA,IAAMR,WAAW,GAAGH,KAAK,CAACY,WAAN,CAAkB,YAAM;IAC1C,OAAOJ,cAAc,CAAC,CAACJ,WAAF,CAArB;EACD,CAFmB,EAEjB,CAACA,WAAD,CAFiB,CAApB;EAIA,IAAMS,WAAW,GAAGb,KAAK,CAACc,OAAN,CAClB;IAAA,OAAO;MACLX,WAAW,EAAXA,WADK;MAELC,WAAW,EAAXA;IAFK,CAAP;EAAA,CADkB,EAKlB,CAACD,WAAD,EAAcC,WAAd,CALkB,CAApB;EAQA,OAEI,KAAC,aAAD;IAAe,KAAK,EAAEK,KAAtB;IAAA,UACE,KAAC,mBAAD;MAAqB,KAAK,EAAEA,KAA5B;MAAA,UACE,MAAC,KAAD,CAAO,SAAP;QAAiB,gBAAgB,EAAC,OAAlC;QAAA,WACE,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,OADP;UAEE,SAAS,EAAEjB,KAFb;UAGE,OAAO,EAAE;YAAEuB,KAAK,EAAE;UAAT;QAHX,EADF,EAME,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,SADP;UAEE,SAAS,EAAEtB,OAFb;UAGE,OAAO,EAAE;YAAEsB,KAAK,EAAE;UAAT;QAHX,EANF,EAWE,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,QADP;UAEE,SAAS,EAAErB,MAFb;UAGE,OAAO,EAAE;YAAEqB,KAAK,EAAE;UAAT;QAHX,EAXF,EAgBE,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAEpB,IAFb;UAGE,OAAO,EAAE;YAAEoB,KAAK,EAAE;UAAT;QAHX,EAhBF,EAqBE,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,QADP;UAEE,SAAS,EAAEnB,MAFb;UAGE,OAAO,EAAE;YAAEmB,KAAK,EAAE;UAAT;QAHX,EArBF;MAAA;IADF;EADF,EAFJ;AAmCD"},"metadata":{},"sourceType":"module"}