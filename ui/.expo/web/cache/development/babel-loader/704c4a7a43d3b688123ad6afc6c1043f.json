{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Index from \"./screens/Index\";\nimport Details from \"./screens/Details\";\nimport Create from \"./screens/Create\";\nimport Edit from \"./screens/Edit\";\nimport Delete from \"./screens/Delete\";\nimport { FAB, DefaultTheme, Provider as PaperProvider } from \"react-native-paper\";\nimport React from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App(props) {\n  var theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n    roundness: 6,\n    mode: \"outlined\",\n    colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n      primary: '#941a1d',\n      accent: '#262626'\n    })\n  });\n\n  return _jsx(PaperProvider, {\n    theme: theme,\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Index\",\n          component: Index,\n          options: {\n            DefaultTheme: DefaultTheme,\n            title: 'My Contacts'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Create\",\n          component: Create,\n          options: {\n            DefaultTheme: DefaultTheme,\n            title: 'Add Contact'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Details\",\n          component: Details,\n          options: {\n            DefaultTheme: DefaultTheme,\n            title: 'Contact Details'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Edit\",\n          component: Edit,\n          options: {\n            DefaultTheme: DefaultTheme,\n            title: 'Update Contact'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Delete\",\n          component: Delete,\n          options: {\n            DefaultTheme: DefaultTheme,\n            title: 'Delete Contact'\n          }\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","Index","Details","Create","Edit","Delete","FAB","DefaultTheme","Provider","PaperProvider","React","Stack","App","props","theme","roundness","mode","colors","primary","accent","title"],"sources":["/Users/home/Desktop/APP/ui/App.js"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Index from \"./screens/Index\";\nimport Details from \"./screens/Details\";\nimport Create from \"./screens/Create\";\nimport Edit from \"./screens/Edit\";\nimport Delete from \"./screens/Delete\";\nimport {FAB,\n  DefaultTheme,\n  Provider as PaperProvider,\n  // PaperDefaultTheme,\n  // NavigationDefaultTheme,\n} from \"react-native-paper\";\n\nimport React from \"react\";\n//import { PreferencesContext } from './PreferencesContext';\n\n// export const PreferencesContext = React.createContext({\n//   toggleTheme: () => {},\n//   isThemeDark: false,\n// });\n\n// const CombinedDefaultTheme = merge(\n//   PaperDefaultTheme,\n//   NavigationDefaultTheme\n// );\n// const CombinedDarkTheme = merge(\n//   PaperDarkTheme,\n//   NavigationDarkTheme\n// );\n// const CombinedDefaultTheme =\n\nconst Stack = createNativeStackNavigator();\nexport default function App(props) {\n  // const [isThemeDark, setIsThemeDark] = React.useState(false);\n\n  // let theme = isThemeDark ? CombinedDarkTheme : CombinedDefaultTheme;\n\n  // const toggleTheme = React.useCallback(() => {\n  //   return setIsThemeDark(!isThemeDark);\n  // }, [isThemeDark]);\n\n  // const preferences = React.useMemo(\n  //   () => ({\n  //     toggleTheme,\n  //     isThemeDark,\n  //   }),\n  //   [toggleTheme, isThemeDark]\n  // );\n  let theme = {\n    ...DefaultTheme,\n    roundness: 6,\n    mode: \"outlined\",\n    colors: {\n      ...DefaultTheme.colors,\n      primary: '#941a1d',\n      accent: '#262626',\n    },\n  };\n  return (\n    // <PreferencesContext.Provider value={preferences}>\n    <PaperProvider theme={theme}>\n          <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Index\" component={Index}   options={{DefaultTheme, title: 'My Contacts' }}/>\n          <Stack.Screen name=\"Create\" component={Create} options={{DefaultTheme, title: 'Add Contact' }}/>\n          <Stack.Screen name=\"Details\" component={Details} options={{DefaultTheme, title: 'Contact Details' }}/>\n          <Stack.Screen name=\"Edit\" component={Edit} options={{DefaultTheme,title: 'Update Contact' }}/>\n          <Stack.Screen name=\"Delete\" component={Delete} options={{DefaultTheme, title: 'Delete Contact' }}/>\n        </Stack.Navigator>\n    </NavigationContainer>\n    </PaperProvider>\n    // </PreferencesContext.Provider>\n  );\n}\n"],"mappings":";;;;;;AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,SAAQC,GAAR,EACEC,YADF,EAEEC,QAAQ,IAAIC,aAFd,QAKO,oBALP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;;;AAkBA,IAAMC,KAAK,GAAGX,0BAA0B,EAAxC;AACA,eAAe,SAASY,GAAT,CAAaC,KAAb,EAAoB;EAgBjC,IAAIC,KAAK,mCACJP,YADI;IAEPQ,SAAS,EAAE,CAFJ;IAGPC,IAAI,EAAE,UAHC;IAIPC,MAAM,kCACDV,YAAY,CAACU,MADZ;MAEJC,OAAO,EAAE,SAFL;MAGJC,MAAM,EAAE;IAHJ;EAJC,EAAT;;EAUA,OAEE,KAAC,aAAD;IAAe,KAAK,EAAEL,KAAtB;IAAA,UACM,KAAC,mBAAD;MAAA,UACF,MAAC,KAAD,CAAO,SAAP;QAAA,WACE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,OAAnB;UAA2B,SAAS,EAAEb,KAAtC;UAA+C,OAAO,EAAE;YAACM,YAAY,EAAZA,YAAD;YAAea,KAAK,EAAE;UAAtB;QAAxD,EADF,EAEE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,QAAnB;UAA4B,SAAS,EAAEjB,MAAvC;UAA+C,OAAO,EAAE;YAACI,YAAY,EAAZA,YAAD;YAAea,KAAK,EAAE;UAAtB;QAAxD,EAFF,EAGE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,SAAnB;UAA6B,SAAS,EAAElB,OAAxC;UAAiD,OAAO,EAAE;YAACK,YAAY,EAAZA,YAAD;YAAea,KAAK,EAAE;UAAtB;QAA1D,EAHF,EAIE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,MAAnB;UAA0B,SAAS,EAAEhB,IAArC;UAA2C,OAAO,EAAE;YAACG,YAAY,EAAZA,YAAD;YAAca,KAAK,EAAE;UAArB;QAApD,EAJF,EAKE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,QAAnB;UAA4B,SAAS,EAAEf,MAAvC;UAA+C,OAAO,EAAE;YAACE,YAAY,EAAZA,YAAD;YAAea,KAAK,EAAE;UAAtB;QAAxD,EALF;MAAA;IADE;EADN,EAFF;AAeD"},"metadata":{},"sourceType":"module"}