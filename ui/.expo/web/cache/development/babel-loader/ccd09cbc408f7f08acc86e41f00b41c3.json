{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState, List, Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { fetchUsersAsync } from \"../services/user.service\";\nimport User from \"../components/User\";\nimport { Button, FAB, IconButton } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Index(props) {\n  var navigation = useNavigation();\n  var route = useRoute();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  useEffect(function () {\n    var _route$params;\n\n    switch ((_route$params = route.params) == null ? void 0 : _route$params.op) {\n      case undefined:\n        fetchUsersAsync().then(function (json) {\n          return setUsers(json);\n        });\n        break;\n\n      case \"create\":\n        setUsers([].concat(_toConsumableArray(users), [route.params.data]));\n        break;\n\n      case \"edit\":\n        setUsers(users.map(function (u) {\n          return u.id === route.params.data.id ? route.params.data : u;\n        }));\n        break;\n\n      case \"delete\":\n        setUsers(users.filter(function (u) {\n          return u.id != route.params.data.id;\n        }));\n        break;\n\n      default:\n        throw new Error(\"Unknown Operation\");\n    }\n\n    var ItemDivider = function ItemDivider() {\n      return _jsx(View, {\n        style: {\n          height: 1,\n          width: \"100%\",\n          backgroundColor: \"#607D8B\"\n        }\n      });\n    };\n  }, [route.params]);\n\n  var ItemDivider = function ItemDivider() {\n    return _jsx(View, {});\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(View, {\n      containerStyle: {\n        borderTopWidth: 0,\n        borderBottomWidth: 0\n      },\n      children: _jsx(FlatList, {\n        data: users,\n        renderItem: function renderItem(u) {\n          return _jsx(User, {\n            user: u\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      })\n    }), _jsx(FAB, {\n      icon: \"plus\",\n      large: \"true\",\n      color: \"white\",\n      theme: {\n        colors: {\n          accent: \"#941a1d\"\n        }\n      },\n      style: {\n        position: \"absolute\",\n        margin: 16,\n        right: 10,\n        bottom: 10\n      },\n      onPress: function onPress() {\n        return navigation.navigate(\"Create\");\n      }\n    })]\n  });\n}","map":{"version":3,"names":["useEffect","useState","List","Component","useNavigation","useRoute","fetchUsersAsync","User","Button","FAB","IconButton","Index","props","navigation","route","users","setUsers","params","op","undefined","then","json","data","map","u","id","filter","Error","ItemDivider","height","width","backgroundColor","flex","borderTopWidth","borderBottomWidth","item","colors","accent","position","margin","right","bottom","navigate"],"sources":["/Users/home/Desktop/APP/ui/screens/Index.js"],"sourcesContent":["import { useEffect, useState, List, Component } from \"react\";\nimport { Text, View, FlatList } from \"react-native\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { fetchUsersAsync } from \"../services/user.service\";\nimport User from \"../components/User\";\n\nimport { Button, FAB, IconButton } from \"react-native-paper\";\n//import App from \"./src/App\";\n//import store from \"./store\";\n\n\n  \n\n\nexport default function Index(props) {\n\n  //navigation\n  const navigation = useNavigation();\n  const route = useRoute();\n  //state\n  const [users, setUsers] = useState([]);\n  //use effect\n  useEffect(() => {\n    switch (route.params?.op) {\n      case undefined: //first time loading this view\n        fetchUsersAsync().then((json) => setUsers(json));\n        break;\n      case \"create\":\n        setUsers([...users, route.params.data]);\n      \n        break;\n      case \"edit\":\n        setUsers(\n          users.map((u) =>\n            u.id === route.params.data.id ? route.params.data : u\n          )\n          \n        );\n        break;\n      case \"delete\":\n        setUsers(users.filter((u) => u.id != route.params.data.id));\n        break;\n      default:\n        throw new Error(\"Unknown Operation\");\n    }\n    const ItemDivider = () => {\n      return (\n        <View\n          style={{\n            height: 1,\n            width: \"100%\",\n            backgroundColor: \"#607D8B\",\n          }}\n        />\n      );\n    }\n\n  }, [route.params]);\n\n  const ItemDivider = () => {\n    return (\n      <View\n        \n      />\n    );\n  }\n  return (\n    <View style={{ flex: 1 }}>\n\n<View containerStyle={{ borderTopWidth: 0, borderBottomWidth: 0 }}>\n        <FlatList         \n          data={users}\n          renderItem={(u) => <User user={u} />}\n          keyExtractor={(item) => item.id}\n        />\n        \n        </View>\n\n      <FAB\n        icon=\"plus\"\n        large=\"true\"\n        color=\"white\"\n        theme={{ colors: { accent: \"#941a1d\" } }}\n        style={{\n          position: \"absolute\",\n          margin: 16,\n          right: 10,\n          bottom: 10,\n        }}\n        onPress={() => navigation.navigate(\"Create\")}\n      ></FAB>\n    </View>\n\n  );\n  }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}