{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Index from \"./screens/Index\";\nimport Details from \"./screens/Details\";\nimport Create from \"./screens/Create\";\nimport Edit from \"./screens/Edit\";\nimport Delete from \"./screens/Delete\";\nimport { DefaultTheme, Provider as PaperProvider } from \"react-native-paper\";\nimport React from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var preferences = React.useMemo(function () {\n    return {\n      toggleTheme: toggleTheme,\n      isThemeDark: isThemeDark\n    };\n  }, [toggleTheme, isThemeDark]);\n  return _jsx(PaperProvider, {\n    theme: theme,\n    children: _jsx(NavigationContainer, {\n      theme: theme,\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: \"Index\",\n        children: [_jsx(Stack.Screen, {\n          name: \"Index\",\n          component: Index,\n          options: {\n            title: \"MY CONTACTS\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Details\",\n          component: Details,\n          options: {\n            title: \"CONTACT DETAILS\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Create\",\n          component: Create,\n          options: {\n            title: \"ADD CONTACT\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Edit\",\n          component: Edit,\n          options: {\n            title: \"UPDATE CONTACT\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Delete\",\n          component: Delete,\n          options: {\n            title: \"DELETE CONTACT\"\n          }\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","Index","Details","Create","Edit","Delete","DefaultTheme","Provider","PaperProvider","React","Stack","App","preferences","useMemo","toggleTheme","isThemeDark","theme","title"],"sources":["/Users/home/Desktop/APP/ui/App.js"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Index from \"./screens/Index\";\nimport Details from \"./screens/Details\";\nimport Create from \"./screens/Create\";\nimport Edit from \"./screens/Edit\";\nimport Delete from \"./screens/Delete\";\nimport { DefaultTheme,\n  Provider as PaperProvider,\n  // PaperDefaultTheme,\n  // NavigationDefaultTheme,\n} from \"react-native-paper\";\n\nimport React from \"react\";\n//import { PreferencesContext } from './PreferencesContext';\n\n// export const PreferencesContext = React.createContext({\n//   toggleTheme: () => {},\n//   isThemeDark: false,\n// });\n\n// const CombinedDefaultTheme = merge(\n//   PaperDefaultTheme,\n//   NavigationDefaultTheme\n// );\n// const CombinedDarkTheme = merge(\n//   PaperDarkTheme,\n//   NavigationDarkTheme\n// );\n// const CombinedDefaultTheme = \n\nconst Stack = createNativeStackNavigator();\nexport default function App() {\n  // const [isThemeDark, setIsThemeDark] = React.useState(false);\n\n  // let theme = isThemeDark ? CombinedDarkTheme : CombinedDefaultTheme;\n\n  // const toggleTheme = React.useCallback(() => {\n  //   return setIsThemeDark(!isThemeDark);\n  // }, [isThemeDark]);\n\n  const preferences = React.useMemo(\n    () => ({\n      toggleTheme,\n      isThemeDark,\n    }),\n    [toggleTheme, isThemeDark]\n  );\n\n  return (\n    // <PreferencesContext.Provider value={preferences}>\n      <PaperProvider theme={theme}>\n        <NavigationContainer theme={theme}>\n          <Stack.Navigator initialRouteName=\"Index\">\n            <Stack.Screen\n              name=\"Index\"\n              component={Index}\n              options={{ title: \"MY CONTACTS\" }}\n            />\n            <Stack.Screen\n              name=\"Details\"\n              component={Details}\n              options={{ title: \"CONTACT DETAILS\" }}\n            />\n            <Stack.Screen\n              name=\"Create\"\n              component={Create}\n              options={{ title: \"ADD CONTACT\" }}\n            />\n            <Stack.Screen\n              name=\"Edit\"\n              component={Edit}\n              options={{ title: \"UPDATE CONTACT\" }}\n            />\n            <Stack.Screen\n              name=\"Delete\"\n              component={Delete}\n              options={{ title: \"DELETE CONTACT\" }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </PaperProvider>\n    // </PreferencesContext.Provider>\n  );\n}\n"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,SAASC,YAAT,EACEC,QAAQ,IAAIC,aADd,QAIO,oBAJP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;;;AAkBA,IAAMC,KAAK,GAAGV,0BAA0B,EAAxC;AACA,eAAe,SAASW,GAAT,GAAe;EAS5B,IAAMC,WAAW,GAAGH,KAAK,CAACI,OAAN,CAClB;IAAA,OAAO;MACLC,WAAW,EAAXA,WADK;MAELC,WAAW,EAAXA;IAFK,CAAP;EAAA,CADkB,EAKlB,CAACD,WAAD,EAAcC,WAAd,CALkB,CAApB;EAQA,OAEI,KAAC,aAAD;IAAe,KAAK,EAAEC,KAAtB;IAAA,UACE,KAAC,mBAAD;MAAqB,KAAK,EAAEA,KAA5B;MAAA,UACE,MAAC,KAAD,CAAO,SAAP;QAAiB,gBAAgB,EAAC,OAAlC;QAAA,WACE,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,OADP;UAEE,SAAS,EAAEf,KAFb;UAGE,OAAO,EAAE;YAAEgB,KAAK,EAAE;UAAT;QAHX,EADF,EAME,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,SADP;UAEE,SAAS,EAAEf,OAFb;UAGE,OAAO,EAAE;YAAEe,KAAK,EAAE;UAAT;QAHX,EANF,EAWE,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,QADP;UAEE,SAAS,EAAEd,MAFb;UAGE,OAAO,EAAE;YAAEc,KAAK,EAAE;UAAT;QAHX,EAXF,EAgBE,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAEb,IAFb;UAGE,OAAO,EAAE;YAAEa,KAAK,EAAE;UAAT;QAHX,EAhBF,EAqBE,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,QADP;UAEE,SAAS,EAAEZ,MAFb;UAGE,OAAO,EAAE;YAAEY,KAAK,EAAE;UAAT;QAHX,EArBF;MAAA;IADF;EADF,EAFJ;AAmCD"},"metadata":{},"sourceType":"module"}